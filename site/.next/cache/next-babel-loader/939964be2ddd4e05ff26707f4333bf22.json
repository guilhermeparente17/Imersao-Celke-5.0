{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Documents\\\\imersao_cinco\\\\site\\\\pages\\\\cadastrar.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nfunction Cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var _useState2 = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    return setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, responseEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(meta);\n              setResponse({\n                formSave: true\n              });\n              _context.prev = 3;\n              _context.next = 6;\n              return fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 6:\n              res = _context.sent;\n              _context.next = 9;\n              return res.json();\n\n            case 9:\n              responseEnv = _context.sent;\n\n              if (responseEnv.error) {\n                setResponse({\n                  formSave: false,\n                  type: 'error',\n                  message: responseEnv.message\n                });\n              } else {\n                setResponse({\n                  formSave: false,\n                  type: 'success',\n                  message: responseEnv.message\n                });\n              }\n\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](3);\n              setResponse({\n                formSave: false,\n                type: 'error',\n                message: 'Erro: Meta nao cadastrada com sucesso, tente mais tarde!'\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 13]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastrar minha meta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 46\n      }, this) : \"\", response.type === 'success' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 48\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMeta,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          placeholder: \"Nome da meta\",\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 117\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 123\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descricao \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          placeholder: \"Descricao da meta\",\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 136\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 142\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Status \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"status\",\n          id: \"status\",\n          placeholder: \"Status da meta\",\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 123\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 129\n        }, this), response.formSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cadastrar, \"41Q4vQ6JvBR+6Bb9al1pE3jQyCk=\");\n\n_c = Cadastrar;\nexport default Cadastrar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastrar\");","map":{"version":3,"sources":["C:/Users/guilh/Documents/imersao_cinco/site/pages/cadastrar.jsx"],"names":["React","useState","Cadastrar","name","description","status","meta","setMeta","formSave","type","message","response","setResponse","onChangeInput","e","target","value","sendMeta","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","res","json","responseEnv","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Cadastrar() {\r\n    const [meta, setMeta] = useState({\r\n        name: '',\r\n        description: '',\r\n        status: '',\r\n    })\r\n\r\n    const [response, setResponse] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    })\r\n\r\n    const onChangeInput = e => setMeta({ ...meta, [e.target.name]: e.target.value })\r\n\r\n    const sendMeta = async e => {\r\n        e.preventDefault()\r\n        console.log(meta)\r\n\r\n        setResponse({formSave: true})\r\n        try {\r\n            const res = await fetch('http://localhost:8080/metas', {\r\n                method: 'POST',\r\n                body: JSON.stringify(meta),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const responseEnv = await res.json()\r\n            if (responseEnv.error) {\r\n                setResponse({\r\n                    formSave: false,\r\n                    type: 'error',\r\n                    message: responseEnv.message\r\n                })\r\n            } else {\r\n                setResponse({\r\n                    formSave: false,\r\n                    type: 'success',\r\n                    message: responseEnv.message\r\n                })\r\n            }\r\n        } catch (err) {\r\n            setResponse({\r\n                formSave: false,\r\n                type: 'error',\r\n                message: 'Erro: Meta nao cadastrada com sucesso, tente mais tarde!'\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <h1>Cadastrar minha meta</h1>\r\n                <hr />\r\n\r\n                {response.type === 'error' ? <p>{response.message}</p> : \"\"}\r\n                {response.type === 'success' ? <p>{response.message}</p> : \"\"}\r\n\r\n                <form onSubmit={sendMeta}>\r\n                    <label>Nome </label>\r\n                    <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Nome da meta\" onChange={onChangeInput} /> <br /><br />\r\n\r\n                    <label>Descricao </label>\r\n                    <input type=\"text\" name=\"description\" id=\"description\" placeholder=\"Descricao da meta\" onChange={onChangeInput} /> <br /><br />\r\n\r\n                    <label>Status </label>\r\n                    <input type=\"text\" name=\"status\" id=\"status\" placeholder=\"Status da meta\" onChange={onChangeInput} /> <br /><br />\r\n\r\n                    \r\n\r\n                    {response.formSave ? <button type=\"submit\">Enviando...</button> : <button type=\"submit\">Cadastrar</button>}\r\n                </form>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cadastrar"]},"metadata":{},"sourceType":"module"}